{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Syntaxes.js","../../src/components/Navbar.svelte","../../src/components/Card.svelte","../../src/components/TopArrow.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.19.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default {\n\tConditions: [\n\t\t{\n\t\t\tname: \"Bot paused\",\n\t\t\tdescription: \"Tell if a bot is paused or not.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%bot/string% is paused [in %guild%]\",\n\t\t\t\t\"%bot/string% (is|are)(n't| not) paused [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"if event-bot isn't paused:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bot is playing\",\n\t\t\tdescription: \"Check if a bot is playing something in a guild\",\n\t\t\tpatterns: [\n\t\t\t\t\"%bot/string% is playing [in %guild%]\",\n\t\t\t\t\"%bot/string% (is|are)(n't| not) playing [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"if event-bot is playing\"\n\t\t},\n\t\t{\n\t\t\tname: \"Member is deafened\",\n\t\t\tdescription: \"If the guild modifier is included, this passes if the member is deafened via a guild admin.If it isn't included, it passes if the user has either deafened themselves, or was deafened by an admin\",\n\t\t\tpatterns: [\n\t\t\t\t\"%members% (is|are) [<guild>] deafened\",\n\t\t\t\t\"%members% (is|are)(n't| not) [<guild>] deafened\",\n\t\t\t],\n\t\t\texample: \"discord command $checkGuildMute <member>:,\\ttrigger:,\\t\\tif arg-1 is guild muted:,\\t\\t\\treply with \\\"%arg-1% is guild muted!\\\",\\t\\t\\tstop,\\t\\treply with \\\"%arg-1% is not guild muted!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Emote is Animated\",\n\t\t\tdescription: \"Check if a emote is animated.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%emotes% (is|are) animated\",\n\t\t\t\t\"%emotes% (is|are)(n't| not) animated\",\n\t\t\t],\n\t\t\texample: \"discord command $emotes:,\\ttrigger:,\\t\\tloop emotes of event-guild:,\\t\\t\\tif loop-value is animated:,\\t\\t\\t\\tadd loop-value to {_animated::*},\\t\\t\\telse:,\\t\\t\\t\\tadd loop-value to {_non::*},\\t\\tcreate embed:,\\t\\t\\tset the author info of the embed to author named \\\"Emotes %reaction \\\"\\\":smile:\\\"\\\"%\\\" with no url and no icon,\\t\\t\\tset the description of the embed to \\\"%name of event-guild% has %size of {_non::*}% regular emotes and %size of {_animated::*}% animated emotes!!\\\",\\t\\t\\tset the colour of the embed to Purple,\\t\\t\\tadd field named \\\"Local emotes (1/1)\\\" with value \\\"%{_non::*}%\\\" to embed,\\t\\t\\tadd field named \\\"Animated emotes (1/1)\\\" with value \\\"%{_animated::*}%\\\" to embed,\\t\\tsend the last created embed to event-channel with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Member Has Permission\",\n\t\t\tdescription: \"Check if a member has a permission, can also check if they have a permission in a certain GuildChannel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%member% has permission %permission% [in %-channel%]\",\n\t\t\t\t\"%user% has permission %permission% [in %guild/channel%]\",\n\t\t\t\t\"%member% (doesn[']t|does not) have permission %permission% [in %-channel%]\",\n\t\t\t\t\"%user% (doesn[']t|does not) have permission %permission% [in %guild/channel%]\",\n\t\t\t],\n\t\t\texample: \"if event-member has permission voice connect\"\n\t\t},\n\t\t{\n\t\t\tname: \"Member has role\",\n\t\t\tdescription: \"Check if a member either does, or does not have either a specific %role% or a role with a certain name.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%member% (has|have) [the] role %role%\",\n\t\t\t\t\"%member% (does[n[']t]|does not) have [the] role %role%\",\n\t\t\t\t\"%member% (has|have) [the] role [named] %string%\",\n\t\t\t\t\"%member% (does[n[']t]|does not) have [the] role [named] %string%\",\n\t\t\t],\n\t\t\texample: \"discord command $role <member> <string>:,\\ttrigger:,\\t\\tif arg-1 has role named arg-2:,\\t\\t\\treply with \\\"%arg-1% does have a role named %arg-2%\\\",\\t\\t\\tstop,\\t\\treply with \\\"%arg-1% does not have a role named %arg-2%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Member is muted\",\n\t\t\tdescription: \"If the guild modifier is included, this passes if the member is muted via a guild admin.If it isn't included, it passes if the user has either muted themselves, or was muted by an admin\",\n\t\t\tpatterns: [\n\t\t\t\t\"%members% (is|are) [<guild>] muted\",\n\t\t\t\t\"%members% (is|are)(n't| not) [<guild>] muted\",\n\t\t\t],\n\t\t\texample: \"discord command $checkGuildMute <member>:,\\ttrigger:,\\t\\tif arg-1 is guild muted:,\\t\\t\\treply with \\\"%arg-1% is guild muted!\\\",\\t\\t\\tstop,\\t\\treply with \\\"%arg-1% is not guild muted!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"NSFW\",\n\t\t\tdescription: \"Lets you check if a channel builder or text channel is nsfw/sfw.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] nsfw state[s] of %channelbuilders/textchannels%\",\n\t\t\t\t\"%channelbuilders/textchannels%'[s] nsfw state[s]\",\n\t\t\t],\n\t\t\texample: \"discord command nsfw:,\\tprefixes: $,\\ttrigger:,\\t\\tif event-channel is nsfw:,\\t\\t\\treply with \\\"%event-channel% is nsfw\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Attachment is Image\",\n\t\t\tdescription: \"Check if a message attachment is an image.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%attachments% (is|are) [a[n]] image[s]\",\n\t\t\t\t\"%attachments% (is|are)(n't| not) [a[n]] image[s]\",\n\t\t\t],\n\t\t\texample: \"on guild message received:,\\tset {_} to attachment of event-message,\\tif {_} is set:,\\t\\tif {_} is not an image:,\\t\\t\\tbroadcast \\\"%attachment url of {_}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Create channel scope\",\n\t\t\tdescription: \"Provides a easy way to create either a text channel or a voice channel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(make|create) [text] channel\",\n\t\t\t\t\"(make|create) voice channel\",\n\t\t\t],\n\t\t\texample: \"command /channel:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\tset name of the channel to \\\"Testing\\\",\\t\\tset {guild} to guild with id \\\"56156156615611\\\",\\t\\tset nsfw state of the channel to true,\\t\\tcreate the channel in {guild} with \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Make Embed\",\n\t\t\tdescription: \"Provides a pretty and easy way of making a new embed with a bunch of different attributes\",\n\t\t\tpatterns: [\n\t\t\t\t\"(make|create) (embed|embed %-embedbuilder%)\",\n\t\t\t\t\"(make|create) (embed|embed %-embedbuilder%) and send [(it|the embed)] to %users/channels% [(with|using) %bot/string%] [and store (it|the message) in %-objects%]\",\n\t\t\t\t\"(make|create) (embed|embed %-embedbuilder%) and reply with [(it|the embed)] [and store (it|the message) in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"command $scope:,\\ttrigger:,\\t\\tmake a new embed:,\\t\\t\\tset color of embed the embed to red,\\t\\t\\tset url of the embed to \\\"https://google.com\\\",\\t\\t\\tset title of the embed to \\\"Google!\\\",\\t\\tset {_embed} to last made embed\"\n\t\t},\n\t],\n\tEffects: [\n\t\t{\n\t\t\tname: \"Force Play\",\n\t\t\tdescription: \"This will force a bot to play a track and set the current playing track to be next in the queue. If the input isn't a single track or not able to be found it will not affect the bot.\",\n\t\t\tpatterns: [\n\t\t\t\t\"force [%bot/string% to] play %string/track% [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"force play \\\"some youtube url im too lazy to go find one\\\" in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Join voice channel\",\n\t\t\tdescription: \"Join a voice channel with a bot\",\n\t\t\tpatterns: [\n\t\t\t\t\"join %voicechannel% [with %bot/string%]\"\n\t\t\t],\n\t\t\texample: \"join event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Leave Voice Channel\",\n\t\t\tdescription: \"Make a bot leave it's voice channel in a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"make %bots/strings% (leave|disconnect from) (voice|vc) [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command leave:,\\tprefixes: ##,\\ttrigger:,\\t\\tif voice channel of event-bot in event-guild is set:,\\t\\t\\tmake event-bot leave vc,\\t\\t\\treply with \\\"I've left my voice channel\\\",\\t\\t\\tstop,\\t\\treply with \\\"I'm not currently in any voice channels!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Pause track\",\n\t\t\tdescription: \"Pause a track a bot is playing in a guild, if it is already paused nothing happens\",\n\t\t\tpatterns: [\n\t\t\t\t\"pause [the] (track|song) %bot/string% is playing [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"pause the track event-bot is playing in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Play audio\",\n\t\t\tdescription: \"Play a specific audio track or attempt to load something from a URL\",\n\t\t\tpatterns: [\n\t\t\t\t\"play %strings/tracks% [in %guild%] [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"play \\\"https://www.youtube.com/watch?v=elwTgpHlty0\\\" in guild with id \\\"2199673352656165156\\\" with \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Resume track\",\n\t\t\tdescription: \"Resume a track a bot is playing in a guild, if the bot is not paused then nothing happens\",\n\t\t\tpatterns: [\n\t\t\t\t\"resume [the] (track|song|music) %bot/string% (is playing|has paused) [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"resume the track event-bot is playing\"\n\t\t},\n\t\t{\n\t\t\tname: \"Search Audio\",\n\t\t\tdescription: \"Lets you search various music sites for a query. You can either access the results via the search results expression, or store them in a variable.\",\n\t\t\tpatterns: [\n\t\t\t\t\"search (youtube|soundcloud) for %strings% [and store the results in %listvariable%]\"\n\t\t\t],\n\t\t\texample: \"on join:,\\tsearch youtube for \\\"%player%\\\" and store the results in {_results::*},\\tif {_results::*} is set:,\\t\\tmessage \\\"Did you know there are %size of {_results::*}% videos about you on YouTube?\\\" to player\"\n\t\t},\n\t\t{\n\t\t\tname: \"Shuffle Queue\",\n\t\t\tdescription: \"This will randomize a bots queue\",\n\t\t\tpatterns: [\n\t\t\t\t\"shuffle [the] queue of %bot/string% [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"shuffle the queue of event-bot in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Skip track\",\n\t\t\tdescription: \"Skip the current track a bot is playing in a guild\",\n\t\t\tpatterns: [\n\t\t\t\t\"skip [the] (track|song)[s] %bot/string% is playing [in %guilds%]\",\n\t\t\t],\n\t\t\texample: \"skip track event-bot is playing in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Stop track\",\n\t\t\tdescription: \"Stop a track a bot is playing in a guild\",\n\t\t\tpatterns: [\n\t\t\t\t\"stop [the] (track|song) %bot/string% is playing [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"stop the track event-bot is playing\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mark Bot as Gametype\",\n\t\t\tdescription: \"Set a bot's game to a certain gametype. This can be: streaming/watching/playing/listening. For streaming you must include a valid twitch URL to stream to and a title.\",\n\t\t\tpatterns: [\n\t\t\t\t\"mark %bot/string% as %gametype% [to] [with title] %string% [(and|on|with|at) url %-string%]\",\n\t\t\t],\n\t\t\texample: \"discord command watch <text>:,\\tprefixes: ##,\\ttrigger:,\\t\\tmark event-bot as watching arg-1,discord command play <text>:,\\tprefixes: ##,\\ttrigger:,\\t\\tmark event-bot as playing arg-1,discord command stream <text> <text>:,\\tprefixes: ##,\\ttrigger:,\\t\\tmark event-bot as streaming arg-1 with url arg-2,discord command listen <text>:,\\tprefixes: ##,\\ttrigger:,\\t\\tmark event-bot as listening to arg-1\"\n\t\t},\n\t\t{\n\t\t\tname: \"Retrieve User by ID\",\n\t\t\tdescription: \"Retrieve a User via their ID on Discord. This should be a fallback option! Use the user with id expression to get users normally. This searches all of discord, not just your accessible users.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(retrieve|grab) [the] user with id %string% [and store (them|the user) in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"retrieve user with id \\\"65156156156156\\\" and store them in {_message}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Logout of Bot\",\n\t\t\tdescription: \"Shutdown or logout of a bot, destroys the instance and closes the connection\",\n\t\t\tpatterns: [\n\t\t\t\t\"(logout [of]|shutdown) %bot/string%\",\n\t\t\t],\n\t\t\texample: \"discord command $shutdown:,\\ttrigger:,\\t\\tshutdown event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Grab Messages\",\n\t\t\tdescription: \"Grab a number of messages from a text channel\",\n\t\t\tpatterns: [\n\t\t\t\t\"grab [the] last %number% messages in %textchannel%\"\n\t\t\t],\n\t\t\texample: \"discord command $purge <number>:,\\texecutable in: guild,\\ttrigger:,\\t\\tset {_num} to arg-1 ,\\t\\tgrab the last {_num} messages in event-channel,\\t\\tpurge the grabbed messages with event-bot,\\t\\tset {_error} to last vixio error ,\\t\\tif {_error} is set:,\\t\\t\\treply with \\\"I ran into an error! `%{_error}%`\\\",\\t\\t\\tstop,\\t\\treply with \\\"I have successfully purged %arg-1% messages\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Grab Pinned Messages\",\n\t\t\tdescription: \"Grab the pinned messages of a channel or a dm with a user. Can be gotten with the last grabbed pinned messages expression.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(retrieve|grab) pinned messages (of|in|with) %textchannel/user%\"\n\t\t\t],\n\t\t\texample: \"grab pinned messages of event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Pin Message\",\n\t\t\tdescription: \"Pin a message in a channel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"pin %messages% [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"pin event-message in event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Send typing\",\n\t\t\tdescription: \"Make a bot start typing in a text channel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"send typing in %textchannel/user% [with %bot/string%]\"\n\t\t\t],\n\t\t\texample: \"send typing in event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Login\",\n\t\t\tdescription: \"Login to a bot account with a token\",\n\t\t\tpatterns: [\n\t\t\t\t\"(login|connect) to %string% (using|with) [the] name %string%\",\n\t\t\t],\n\t\t\texample: \"on skript load:,\\tlogin to \\\"MjM3MDYyNzE0MTY0MjQ4NTc2.DFfAvg.S_YgY26hqyS1SgNvibrpcdhSk94\\\" with the name \\\"VixioButler\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Change NSFW\",\n\t\t\tdescription: \"Lets you mark a text channel as sfw/nsfw\",\n\t\t\tpatterns: [\n\t\t\t\t\"(make|mark) %textchannels% [as] [<n>]sfw (with|using) %bot/string%\"\n\t\t\t],\n\t\t\texample: \"discord command $nsfw <boolean>:,\\ttrigger:,\\t\\tif arg-1 is true:,\\t\\t\\tmark event-channel as nsfw with event-bot,\\t\\t\\tstop,\\t\\tmark event-channel as sfw with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Purge Messages\",\n\t\t\tdescription: \"Bulk delete a bunch of messages.\",\n\t\t\tpatterns: [\n\t\t\t\t\"purge %messages% with %bot/string%\",\n\t\t\t],\n\t\t\texample: \"discord command $purge <number>:,\\texecutable in: guild,\\ttrigger:,\\t\\tset {_num} to arg-1 ,\\t\\tgrab the last {_num} messages in event-channel,\\t\\tpurge the grabbed messages with event-bot,\\t\\tset {_error} to last vixio error ,\\t\\tif {_error} is set:,\\t\\t\\treply with \\\"I ran into an error! `%{_error}%`\\\",\\t\\t\\tstop,\\t\\treply with \\\"I have successfully purged %arg-1% messages\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Change TTS\",\n\t\t\tdescription: \"Lets you enable or disable text to speech for message builders\",\n\t\t\tpatterns: [\n\t\t\t\t\"(enable|disable) t[ext ]t[o ]s[peech] for %messagebuilders%\"\n\t\t\t],\n\t\t\texample: \"enable tts for {_message builder}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Updates\",\n\t\t\tdescription: \"Pauses or resumes update's to a message's data. For example, if updates are pausedand a new reaction is added to the paused message, the message will still showas if it doesn't have that reaction.\",\n\t\t\tpatterns: [\n\t\t\t\t\"<pause|resume> updates (for|to) %messages%\",\n\t\t\t],\n\t\t\texample: \"on guild message receive:,\\tpause updates for event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Send file\",\n\t\t\tdescription: \"Send a file to a channel or a user. You can input a direct URL to the file or a direct path to the local image/file.\",\n\t\t\tpatterns: [\n\t\t\t\t\"upload %string% [with (message|embed) %-message/string%] to %user/channel% [with %bot/string%] [and store (it|the message) in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"discord command $upload [<text>] [<text>]:,\\ttrigger:,\\t\\tif arg-1 is not set:,\\t\\t\\tupload \\\"https://cdn.discordapp.com/attachments/236641445363056651/482328479288000513/e8873489-b8e8-41f0-bfdf-1af0e7f8689a.png\\\" to event-channel,\\t\\t\\tstop,\\t\\tif arg-2 is not set:,\\t\\t\\tupload arg-1 to event-channel,\\t\\t\\tstop,\\t\\tupload arg-1 with message arg-2 to event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Create channel\",\n\t\t\tdescription: \"Create either a voice channel or a text channel as requested.\",\n\t\t\tpatterns: [\n\t\t\t\t\"create text[(-| )]channel [named] %string% [in %guild%] [(as|with) %bot/string%]\",\n\t\t\t\t\"create voice[(-| )]channel [named] %string% [in %guild%] [(as|with) %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text> <text>:,\\ttrigger:,\\t\\tif arg-1 contains \\\"voice\\\":,\\t\\t\\tcreate voice channel named arg-2,\\t\\t\\tstop,\\t\\telse if arg-1 contains \\\"text\\\":,\\t\\t\\tcreate text channel named arg-2,\\t\\t\\tstop,\\t\\treply with \\\"The first argument must either be \\\"\\\"text\\\"\\\" or \\\"\\\"voice\\\"\\\"\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Clone Channel\",\n\t\t\tdescription: \"Clone a existing channel into either a new guild or the current guild under a new name.\",\n\t\t\tpatterns: [\n\t\t\t\t\"clone %channel% [in[to] %guild%] [with [the] [new] name %-string%] [(with|as) %bot/string%] [and store (it|the channel) in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"clone event-channel with the new name \\\"Rawr!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Create Channel Builder\",\n\t\t\tdescription: \"Create a channel created with the create channel scope\",\n\t\t\tpatterns: [\n\t\t\t\t\"create %channelbuilder% in %guild% [(with|as) %bot/string%] [and store (it|the channel) in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"discord command ##create:,\\ttrigger:,\\t\\tcreate voice channel:,\\t\\t\\tset the name of the channel to \\\"{@bot}\\\",\\t\\t\\tset the bitrate of the channel to 69,\\t\\t\\tcreate the channel in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Create emote\",\n\t\t\tdescription: \"Create a emote in a specific guild, the first %string% can either be a direct url or a direct local path to a file.\",\n\t\t\tpatterns: [\n\t\t\t\t\"create emote %string% with [the] name %string% [in %guild%] [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"discord command $createEmote <text> <text>:,\\ttrigger:,\\t\\tcreate emote arg-1 with name arg-2 ,\\t\\twait 2 seconds,\\t\\treply with \\\"%reaction arg-2%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Create Invite to Guild\",\n\t\t\tdescription: \"Create a invitation to a channel. Can store the newly created invite with the storage option or use the last created invite expression.\",\n\t\t\tpatterns: [\n\t\t\t\t\"create a[n] (invite|invitation) to %channel% [with %bot/string%] [and store it in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"discord command invite:,\\ttrigger:,\\t\\tcreate an invite to event-channel,\\t\\treply with \\\"%the last created invite%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Delete Discord Entity\",\n\t\t\tdescription: \"Delete any deletable discord entity\",\n\t\t\tpatterns: [\n\t\t\t\t\"delete discord entit(y|ies) %messages/channels/roles/guilds/categories/emote% [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"delete discord entity event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bans list\",\n\t\t\tdescription: \"Retrieve all of the banned users in a guild. The results are stored in the retrieved bans expression\",\n\t\t\tpatterns: [\n\t\t\t\t\"(retrieve|grab) [the] (bans|ban list) of %guild%\",\n\t\t\t],\n\t\t\texample: \"discord command $bans:,\\ttrigger:,\\t\\tgrab bans of event-guild,\\t\\tset {_errors} to the last vixio error,\\t\\tif {_errors} is set:,\\t\\t\\treply with \\\"I ran into an error! %{_errors}%\\\",\\t\\t\\tstop,\\t\\treply with \\\"Here are the current bans: `%grabbed bans%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Make Bot leave Guild\",\n\t\t\tdescription: \"Force a bot to leave a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"make %bot/string% leave %guild%\",\n\t\t\t],\n\t\t\texample: \"make event-bot leave event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Move Member to Voice Channel\",\n\t\t\tdescription: \"Move a member to a different voice channel, they must already be in a voice channel to be moved.\",\n\t\t\tpatterns: [\n\t\t\t\t\"move %member% to %voicechannel% [with %bot/string%]\"\n\t\t\t],\n\t\t\texample: \"discord command $move <member> <string>:,\\ttrigger:,\\t\\tset {_voiceChannel} to voice channel with id arg-2,\\t\\tif {_voiceChannel} is not set:,\\t\\t\\treply with \\\"I could not find a voice channel by that id\\\",\\t\\t\\tstop,\\t\\tmove arg-1 to {_voiceChannel}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Member Permission in GuildChannel\",\n\t\t\tdescription: \"Allow, or deny a role or a member permissions to a channel\",\n\t\t\tpatterns: [\n\t\t\t\t\"(allow|1�deny) %roles/members% [the] permission[s] %permissions% [in %channels%] [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"discord command grant <text> <permission>:,\\ttrigger:,\\t\\tif id of event-guild is not \\\"219967335266648065\\\":,\\t\\t\\tstop,\\t\\tset {_role} to role with id arg-1,\\t\\tallow {_role} the permission arg-2 in event-channel,\\t\\tdeny the public role of event-guild the permission arg-2 in event-channel\"\n\t\t},\n\t\t{\n\t\t\tname: \"Ban user\",\n\t\t\tdescription: \"Ban either a user, a member, or a user by their ID\",\n\t\t\tpatterns: [\n\t\t\t\t\"ban %users/strings% from %guild% [(due to|with reason|because of) %-string%] [and delete %-number% days [worth] of messages] [(with|as) %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"command /ban <text>:,\\ttrigger:,\\t\\tban arg-1 from guild with id \\\"622156156316116151\\\" due to \\\"Not following discord rules\\\" as \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Deafen user\",\n\t\t\tdescription: \"Lets you deafen or undeafen a member/user. They must be in a voice channel for this to take effect.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[<un>]deafen %members% [(with|using) %bot%]\",\n\t\t\t],\n\t\t\texample: \"discord command $deaf <member>:,\\ttrigger:,\\t\\tif voice channel of arg-1 is not set:,\\t\\t\\treply with \\\"You cannot deaf or undeafen someone who is not in a voice channel\\\",\\t\\t\\tstop,\\t\\tif arg-1 is not guild deafened:,\\t\\t\\tdeafen arg-1 with event-bot,\\t\\t\\treply with \\\"%arg-1% is now deaf\\\",\\t\\telse:,\\t\\t\\tundeafen arg-1 with event-bot,\\t\\t\\treply with \\\"%arg-1% is no longer deafened\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Kick user\",\n\t\t\tdescription: \"Kick either a user, a member, or a user by their ID\",\n\t\t\tpatterns: [\n\t\t\t\t\"kick %users/strings% from %guild% [(due to|with reason|because of) %-string%] [(with|as) %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"command /kick <text>:,\\ttrigger:,\\t\\tkick arg-1 from guild with id \\\"622156151\\\" due to \\\"Not following discord rules\\\" as \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mute/UnMute a User/Member\",\n\t\t\tdescription: \"Either guild mute a member, or guild unmute a member.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[<un>]mute %members% [(with|using) %bot%]\",\n\t\t\t],\n\t\t\texample: \"discord command $mute <member>:,\\ttrigger:,\\t\\tif voice channel of arg-1 is not set:,\\t\\t\\treply with \\\"You cannot mute or unmute someone who is not in a voice channel\\\",\\t\\t\\tstop,\\t\\tif arg-1 is not guild muted:,\\t\\t\\tmute arg-1 with event-bot,\\t\\t\\treply with \\\"%arg-1% is now muted\\\",\\t\\telse:,\\t\\t\\tunmute arg-1 with event-bot,\\t\\t\\treply with \\\"%arg-1% is no longer muted\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Unban user from Guild\",\n\t\t\tdescription: \"Un-ban a user from a guild as a bot.\",\n\t\t\tpatterns: [\n\t\t\t\t\"unban %users/strings% from %guild% [(with|as) %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"command /ban <text>:,\\ttrigger:,\\t\\tunban arg-1 from event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Append String to Message Buillder\",\n\t\t\tdescription: \"Add text to a Message Builder. If you include the word 'line' then it will append a new line for you after your text.\",\n\t\t\tpatterns: [\n\t\t\t\t\"append [line] %strings% to %messagebuilder%\"\n\t\t\t],\n\t\t\texample: \"command /build:,\\ttrigger:,\\t\\tset {e} to a new message builder,\\t\\tset text of {e} to \\\"Hello\\\",\\t\\tappend \\\" World!\\\" to {e},broadcast \\\"The final product is: %text of {e}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Add Reaction to Message\",\n\t\t\tdescription: \"Add a reaction to a message, can get a reaction with the reaction %string% expression\",\n\t\t\tpatterns: [\n\t\t\t\t\"add %emotes% to %messages% [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"add reaction \\\"smile\\\" to event-message with \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Edit Message\",\n\t\t\tdescription: \"A more natural way to edit a message. Don't forget that you can only edit your own messages.\",\n\t\t\tpatterns: [\n\t\t\t\t\"edit %messages% to (show|say) %message/string%\",\n\t\t\t],\n\t\t\texample: \"discord command $edit:,\\ttrigger:,\\t\\treply with \\\"Ping\\\" and store it in {_msg},\\t\\tedit {_msg} to show \\\"Pong!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Remove Emote by User\",\n\t\t\tdescription: \"Remove a specific users emote from a message, this is for removing a users reacted emote in the reaction add event mostly.\",\n\t\t\tpatterns: [\n\t\t\t\t\"remove %emotes% added by %user% from %message% [with %bot/string%]\",\n\t\t\t],\n\t\t\texample: \"on reaction added:,\\tremove event-emote added by event-user from event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Reply with\",\n\t\t\tdescription: \"Reply with a message in a event\",\n\t\t\tpatterns: [\n\t\t\t\t\"reply with %messages/strings% [and store (it|the message) in %-objects%]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"Hello %mention tag of event-user%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Retrieve message with id\",\n\t\t\tdescription: \"Get a Message via it's ID from a Guild/TextChannel\",\n\t\t\tpatterns: [\n\t\t\t\t\"retrieve message [with id] %string% [(in|from) %channel/user%]\",\n\t\t\t],\n\t\t\texample: \"discord command $addReaction <text> <text>:,\\ttrigger:,\\t\\tretrieve message with id arg-1 ,\\t\\tif last retrieved message is not set:,\\t\\t\\treply with \\\"Could not find a message with that id!\\\",\\t\\t\\tstop,\\t\\tadd reaction arg-2 to reactions of last retrieved message with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Send Message\",\n\t\t\tdescription: \"Send a message to either a user or a text channel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"send %message/string/messagebuilder/embedbuilder% to %channels/users% with %bot/string% [and store (it|the message) in %-objects%]\"\n\t\t\t],\n\t\t\texample: \"discord command $send <text> [<text>]:,\\ttrigger:,\\t\\tif arg-2 is not set:,\\t\\t\\tsend arg-1 to event-channel with event-bot,\\t\\t\\tstop,\\t\\tset {_channel} to channel with id arg-2,\\t\\tif {_channel} is not set:,\\t\\t\\treply with \\\"I could not find a channel with that id!\\\",\\t\\t\\tstop,\\t\\tsend arg-1 to {_channel} with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Delete message\",\n\t\t\tdescription: \"Delete a %message% with a specific bot\",\n\t\t\tpatterns: [\n\t\t\t\t\"delete %message% with %bot/string%\",\n\t\t\t],\n\t\t\texample: \"delete event-message with \\\"Jewel\\\"\"\n\t\t},\n\t],\n\tExpressions: [\n\t\t{\n\t\t\tname: \"Bot paused state\",\n\t\t\tdescription: \"Check if a bot is paused or not. Can be set to true/false.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%bot/string% paused state [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command $pause:,\\texecutable in: guild,\\ttrigger:,\\t\\tif event-bot is paused:,\\t\\t\\tset event-bot paused state to false,\\t\\t\\treply with \\\"I'm no longer paused\\\",\\t\\t\\tstop,\\t\\tset event-bot paused state to true,\\t\\treply with \\\"I'm now paused\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Queue of bot\",\n\t\t\tdescription: \"Get all the tracks a bot currently has queued up for a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] queue of %bot/string% [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command $reset:,\\ttrigger:,\\t\\treset the queue of event-bot,\\t\\treply with \\\"You have successfully cleared my queue\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Track Bot Is Playing\",\n\t\t\tdescription: \"Get the tracks a bot is playing in a specific guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] track[s] %bot/string% is playing [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command $info:,\\ttrigger:,\\t\\tset {_track} to track event-bot is playing,\\t\\tif {_track} is not set:,\\t\\t\\treply with \\\"I am not currently playing anything!\\\",\\t\\t\\tstop,\\t\\treply with \\\"I am currently playing %name of {_track}% by %author of {_track}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Volume of bot\",\n\t\t\tdescription: \"Get the volume a bot is set to in a guild. Can be set to a number that is between 0 and 150. This can also be reset which sets the volume to 150. Anything over 150 is ignored and the volume is set to 150.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] volume of %bot/string% [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command $volume [<number>]:,\\ttrigger:,\\t\\tif arg-1 is not set:,\\t\\t\\treply with \\\"%volume of event-bot%\\\",\\t\\t\\tstop,\\t\\tset the volume of event-bot to arg-1,\\t\\treply with \\\"My volume is now: `%volume of event-bot%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Game type\",\n\t\t\tdescription: \"Get the type of game a user, a bot, or a bot specified by name is playing.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] game type[s] of %bots/users/strings%\",\n\t\t\t\t\"%bots/users/strings%'[s] game type[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $streaming <user>:,\\ttrigger:,\\t\\tset {_type} to the game type of event-user,\\t\\tif {_type} is streaming:,\\t\\t\\treply with \\\"%arg-1% is live!\\\",\\t\\t\\tstop,\\t\\treply with \\\"%arg-1% is not streaming currently\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guilds of bot\",\n\t\t\tdescription: \"Get all the guilds of a bot\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] guild[s] of %bot/string%\",\n\t\t\t\t\"%bot/string%'[s] guild[s]\",\n\t\t\t],\n\t\t\texample: \"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mutual Guild of User\",\n\t\t\tdescription: \"Get all the guilds a user and a bot share. The bot may be assumed in events.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] mutual guilds (of|with) %user% [and %bot/string%]\",\n\t\t\t\t\"%user%[[']s] and %bot/string%[[']s] mutual guilds\",\n\t\t\t],\n\t\t\texample: \"discord command $mutual <user>:,\\ttrigger:,\\t\\treply with \\\"I share %size of mutual guilds of arg-1% guilds with %arg-1%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Uptime Of Bot\",\n\t\t\tdescription: \"Get the amount of time a bot has been up in a skript date form.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] uptime[s] of %strings/bots%\",\n\t\t\t\t\"%strings/bots%'[s] uptime[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $uptime:,\\ttrigger:,\\t\\treply with \\\"I've been awake for %uptime of event-bot%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"The Channel\",\n\t\t\tdescription: \"Get the channel in a create channel scope\",\n\t\t\tpatterns: [\n\t\t\t\t\"[(the|a)][new] channel[(-| )builder]\",\n\t\t\t],\n\t\t\texample: \"discord command $setup:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to \\\"Bot channel\\\",\\t\\t\\tset the topic of the channel to \\\"Hi Pika\\\",\\t\\t\\tcreate the channel in event-guild and store it in {_chnl}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bitrate of channel builder\",\n\t\t\tdescription: \"Get the bitrate of a channel builder. The default value is 64kbps for channel builders. Rates multiplied by 1000.You can set or reset this (resets to 64kbps)\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] bitrate[s] of %channelbuilders%\",\n\t\t\t\t\"%channelbuilders%'[s] bitrate[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $create:,\\ttrigger:,\\t\\tcreate voice channel:,\\t\\t\\tset the name of the channel to \\\"{@bot}\\\",\\t\\t\\tset the bitrate of the channel to 69,\\t\\t\\tcreate the channel in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"User limit of a channel builder\",\n\t\t\tdescription: \"Get or sets the user limit of a channel builder\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] user limit[s] of %channelbuilders%\",\n\t\t\t\t\"%channelbuilders%'[s] user limit[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $create:,\\ttrigger:,\\t\\tcreate voice channel:,\\t\\t\\tset the name of the channel to \\\"{@bot}\\\",\\t\\t\\tset the user limit of the channel to 5,\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I have successfully created the channel! ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Name of Channel Builder\",\n\t\t\tdescription: \"Get the name of a channel builder. Can be set to a string.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] name[s] of %channelbuilders%\",\n\t\t\t\t\"%channelbuilders%'[s] name[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text>:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to arg-1,\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I have successfully created the channel! ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"NSFW State of a channel builder\",\n\t\t\tdescription: \"Returns whether or not a channel builder is NSFW (false by default). Can be set to either true or false.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] nsfw state[s] of %channelbuilders%\",\n\t\t\t\t\"%channelbuilders%'[s] nsfw state[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text> <boolean>:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to arg-1,\\t\\t\\tset the nsfw state of the channel to arg-2,\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I've successfully created a channel named `%arg-1%`, ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Category of channel builder\",\n\t\t\tdescription: \"Get or set the category of a channel builder.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (category|parent)[s] of %channelbuilders%\",\n\t\t\t\t\"%channelbuilders%'[s] (category|parent)[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text>:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to arg-1 ,\\t\\t\\tset the parent of the channel to category named \\\"xd\\\",\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I've successfully created a channel named `%arg-1%`, ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Topic of channel builder\",\n\t\t\tdescription: \"Gets or sets the topic of a channel builder.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] topic[s] of %channelbuilders%\",\n\t\t\t\t\"%channelbuilders%'[s] topic[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text>:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to arg-1 ,\\t\\t\\tset the topic of the channel to \\\"Hi Pika\\\",\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I've successfully created a channel named `%arg-1%`, ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Created Channel Builder\",\n\t\t\tdescription: \"Get the last made Channel Builder created via the Channel Builder scope.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] last[ly] [(made|created)] channel[[ ]builder]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text>:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to arg-1 ,\\t\\t\\tset the topic of the channel to \\\"Hi Pika\\\",\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I've successfully created a channel named `%arg-1%`, ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bitrate of Voice Channel\",\n\t\t\tdescription: \"Get the bitrate of a voice channel. The default value is 64kbps for channel builders. Rates multiplied by 1000. You can set or reset this (resets to 64kbps)\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] bitrate[s] of %voicechannels%\",\n\t\t\t\t\"%voicechannels%'[s] bitrate[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $bitrate <string> <number>:,\\ttrigger:,\\t\\tset bitrate of voice channel with id arg-1 to arg-2\"\n\t\t},\n\t\t{\n\t\t\tname: \"User limit of Voice Channel\",\n\t\t\tdescription: \"Get or sets the user limit of a voice channel\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] user limit[s] of %voicechannels%\",\n\t\t\t\t\"%voicechannels%'[s] user limit[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $bitrate <string> <number>:,\\ttrigger:,\\t\\tset user limit of voice channel with id arg-1 to arg-2 with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Channel Named\",\n\t\t\tdescription: \"Get a channel via it's name, you can include the type of channel and/or the guild to speed the retrieval process up. The searching is case sensitive.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[(voice|text)][(-| )]channel[s] named %string% [in %-guild%]\"\n\t\t\t],\n\t\t\texample: \"discord command move <text>:,\\ttrigger:,\\t\\tset {_} to voice channel named arg-1,\\t\\tif voice channel of event-member is not set:,\\t\\t\\treply with \\\"Not in vc to move to\\\",\\t\\t\\tstop,\\t\\tmove event-member to {_},\\t\\treply with \\\"Done! %event-member% was moved to %{_}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"NSFW state of Text Channel\",\n\t\t\tdescription: \"Returns whether or not a channel is NSFW (false by default). This can be set to a boolean or reset.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] nsfw state[s] of %textchannels%\",\n\t\t\t\t\"%textchannels%'[s] nsfw state[s]\",\n\t\t\t],\n\t\t\texample: \"discord command nsfw <boolean>:,\\tprefixes: $,\\ttrigger:,\\t\\tset nsfw state of event-channel to arg-1\"\n\t\t},\n\t\t{\n\t\t\tname: \"Category of Channel\",\n\t\t\tdescription: \"Get or set the category of a channel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (category|parent)[s] of %channels%\",\n\t\t\t\t\"%channels%'[s] (category|parent)[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $category <string> <string>:,\\ttrigger:,\\t\\tset {_category} to category named arg-2,\\t\\tset {_channel} to channel with id arg-1,\\t\\tset parent of {_channel} to {_category} with event-bot,\\t\\treply with \\\"Successfully moved %{_channel}% to %{_category}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Position of\",\n\t\t\tdescription: \"Get or set the current position of a role or a channel. With channels, 0 is the highest channel, with roles 0 is the lowest custom role, then 1 is the next role up, then 2...\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord position[s] of %channels/roles%\",\n\t\t\t\t\"%channels/roles%'[s] discord position[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $pos <text>:,\\ttrigger:,\\t\\tset {_vc} to channel with id arg-1,\\t\\treply with \\\"%{_vc}%\\\",\\t\\treply with \\\"%discord position of {_vc}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Topic of Text Channel\",\n\t\t\tdescription: \"Get or set the topic of a text channel. You may also delete the topic to reset it.\",\n\t\t\tpatterns: [\n\t\t\t\t\"the] topic[s] of %textchannels%\",\n\t\t\t\t\"%textchannels%'[s] topic[s]\",\n\t\t\t],\n\t\t\texample: \"set topic of event-channel to \\\"Hi Pika\\\" with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Grabbed Messages\",\n\t\t\tdescription: \"Get the grabbed messages from the grab messages effect. This can be used in the purge effect to purge the messages.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] grabbed messages\",\n\t\t\t],\n\t\t\texample: \"discord command $purge <number>:,\\texecutable in: guild,\\ttrigger:,\\t\\tset {_num} to arg-1 ,\\t\\tgrab the last {_num} messages in event-channel,\\t\\tpurge the grabbed messages with event-bot,\\t\\tset {_error} to last vixio error ,\\t\\tif {_error} is set:,\\t\\t\\treply with \\\"I ran into an error! `%{_error}%`\\\",\\t\\t\\tstop,\\t\\treply with \\\"I have successfully purged %arg-1% messages\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Retrieved Pins\",\n\t\t\tdescription: \"Get the results of the last grab pinned messages search.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[last] (grabbed|retrieved) (pins|pinned messages)\",\n\t\t\t],\n\t\t\texample: \"discord command $pins:,\\ttrigger:,\\t\\tgrab pinned messages in event-channel,\\t\\treply with \\\"%grabbed pins%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Slowmode of TextChannel\",\n\t\t\tdescription: \"Set the slowmode of a text channel. Only text channels can have have their slowmode set and retrieved. This can be set, reset, and deleted.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] slowmode[s] of %channel/textchannel%\",\n\t\t\t\t\"%channel/textchannel%'[s] slowmode[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"slowmode of event-channel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Used Alias\",\n\t\t\tdescription: \"Returns the used alias in a command\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] used alias\",\n\t\t\t],\n\t\t\texample: \"broadcast the used alias\"\n\t\t},\n\t\t{\n\t\t\tname: \"Aliases of command\",\n\t\t\tdescription: \"Returns the aliases of a command\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<usable>] aliases[s] of %discordcommands%\",\n\t\t\t\t\"%discordcommands%'[s] [<usable>] aliases[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast aliases of \\\"commandname\\\" parsed as a discord command\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Argument\",\n\t\t\tdescription: \"Represents the argument of a command\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] last arg[ument][s]\"\n\t\t\t],\n\t\t\texample: \"discord command say <string>:,\\tprefixes: !, . and ;,\\ttrigger:,\\t\\treply with arg-1 # replies with the first argument\"\n\t\t},\n\t\t{\n\t\t\tname: \"Used Command\",\n\t\t\tdescription: \"Returns the used command in a command\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] used command\",\n\t\t\t],\n\t\t\texample: \"broadcast aliases of the used command\"\n\t\t},\n\t\t{\n\t\t\tname: \"All Commands\",\n\t\t\tdescription: \"Returns all registered discord commands\",\n\t\t\tpatterns: [\n\t\t\t\t\"[all] discord commands\",\n\t\t\t],\n\t\t\texample: \"loop all discord commands:,\\tbroadcast description of loop-value\"\n\t\t},\n\t\t{\n\t\t\tname: \"Description of Command\",\n\t\t\tdescription: \"Returns the description of a command.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] description[s] of %discordcommands%\",\n\t\t\t\t\"%discordcommands%'[s] description[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast description of \\\"commandname\\\" parsed as a discord command\"\n\t\t},\n\t\t{\n\t\t\tname: \"Used Prefix\",\n\t\t\tdescription: \"Returns the used prefix in a command\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] used prefix\",\n\t\t\t],\n\t\t\texample: \"broadcast the used prefix\"\n\t\t},\n\t\t{\n\t\t\tname: \"Prefixes of command\",\n\t\t\tdescription: \"Returns the prefixes of a command\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] prefixes[s] of %discordcommands%\",\n\t\t\t\t\"%discordcommands%'[s] prefixes[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast prefixes of \\\"commandname\\\" parsed as a discord command\"\n\t\t},\n\t\t{\n\t\t\tname: \"Command Recipient\",\n\t\t\tdescription: \"Returns the type of channel a command was sent to\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] command recipient\",\n\t\t\t],\n\t\t\texample: \"broadcast the command recipient\"\n\t\t},\n\t\t{\n\t\t\tname: \"Usage of Command\",\n\t\t\tdescription: \"Returns the usage of a command.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] usage[s] of %discordcommands%\",\n\t\t\t\t\"%discordcommands%'[s] usage[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast usage of \\\"commandname\\\" parsed as a discord command\"\n\t\t},\n\t\t{\n\t\t\tname: \"New/Current Embed\",\n\t\t\tdescription: \"If it isn't inside an embed scope, this expression returns a new embed. If it is inside of an embed scope, it returns the embed that belongs to that scope.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[(the|an|[a] new)] embed\",\n\t\t\t],\n\t\t\texample: \"# outside a scope,set {_e} to a new embed,make a new embed:,\\tset color of embed the embed to red,\\tset url of the embed to \\\"https://google.com\\\",\\tset title of the embed to \\\"Google!\\\",set {_embed} to last made embed\"\n\t\t},\n\t\t{\n\t\t\tname: \"Author of Embed\",\n\t\t\tdescription: \"Returns the author of an embed. Can be set to any author.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (author info|author)[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] (author info|author)[s]\",\n\t\t\t],\n\t\t\texample: \"set author of {_embed} to author named \\\"Pikachu\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Color of Embed\",\n\t\t\tdescription: \"Returns the color of an embed. Can be set to any color (e.g. red).\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] colo[u]r[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] colo[u]r[s]\",\n\t\t\t],\n\t\t\texample: \"set discord color of {_embed} to red\"\n\t\t},\n\t\t{\n\t\t\tname: \"Description of Embed\",\n\t\t\tdescription: \"Returns the description of an embed. Can be set to any string.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] description[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] description[s]\",\n\t\t\t],\n\t\t\texample: \"set the description of {_embed} to \\\"This is a cool description!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Fields Of Embed\",\n\t\t\tdescription: \"Returns a embed's fields\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] field[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] field[s]\",\n\t\t\t],\n\t\t\texample: \"set {_fields::*} to fields of {_embed}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Footer of Embed\",\n\t\t\tdescription: \"Returns the footer of an embed. Can be set any footer.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] footer[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] footer[s]\",\n\t\t\t],\n\t\t\texample: \"set footer of {_embed} to a footer with text \\\"Hi Pika\\\" and icon \\\"https://i.imgur.com/TQgR2hW.jpg\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Image of Embed\",\n\t\t\tdescription: \"Returns the image of an embed. Can be set any url.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] image[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] image[s]\",\n\t\t\t],\n\t\t\texample: \"set the image of {_embed} to \\\"https://i.imgur.com/TQgR2hW.jpg\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Embed of Message\",\n\t\t\tdescription: \"Get the Embed of a Message\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] embed[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] embed[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%embed of event-message%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Thumbnail of Embed\",\n\t\t\tdescription: \"Returns the thumbnail of an embed. Can be set to any string (e.g. https://i.imgur.com/TQgR2hW.jpg).\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (thumbnail|icon)[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] (thumbnail|icon)[s]\",\n\t\t\t],\n\t\t\texample: \"set the thumbnail of {_embed} to \\\"https://i.imgur.com/TQgR2hW.jpg\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Title of Embed\",\n\t\t\tdescription: \"Returns the title of an embed.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] title[s] of %embedbuilders%\",\n\t\t\t\t\"%embedbuilders%'[s] title[s]\",\n\t\t\t],\n\t\t\texample: \"set the embed title of {_embed} to title with text \\\"hey this is a cool title!\\\" and no icon\"\n\t\t},\n\t\t{\n\t\t\tname: \"Inline Embed\",\n\t\t\tdescription: \"Lets you easily make an embed with a couple common properties.\",\n\t\t\tpatterns: [\n\t\t\t\t\"%embedbuilder% ((with|and) [the] title %-string%|titled %-string%)\",\n\t\t\t\t\"%embedbuilder% (with|and) [the] description %string%\",\n\t\t\t],\n\t\t\texample: \"set {_embed} to a new embed with the title \\\"Title\\\" and the description \\\"Description\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Made Embed\",\n\t\t\tdescription: \"Returns the embed that was last made in a embed scope\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] last[ly] [(made|created)] embed[[ ]builder]\",\n\t\t\t],\n\t\t\texample: \"set {_embed} to the last embed\"\n\t\t},\n\t\t{\n\t\t\tname: \"Url of Title\",\n\t\t\tdescription: \"Returns the url of a title.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (url|link)[s] of %titles%\",\n\t\t\t\t\"%titles%'[s] (url|link)[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%link of {_embed}'s title%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Dimension of Image\",\n\t\t\tdescription: \"Returns a dimension of an embed's thumbnail, image, footer icon or icon. You can specify either width or height.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] <width|height>[s] of %thumbnails/imageinfos%\",\n\t\t\t\t\"%thumbnails/imageinfos%'[s] <width|height>[s]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%width of {_embed}'s thumbnail%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Url of Image\",\n\t\t\tdescription: \"Returns the url of an embed's thumbnail, footer icon, author, icon or large image. Adding the proxy modifier to the syntax will return Discord's proxy url if possible.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<proxy>] url[s] of %thumbnails/imageinfos/footers/authorinfos%\",\n\t\t\t\t\"%thumbnails/imageinfos/footers/authorinfos%'[s] [<proxy>] url[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%proxy url of {_embed}'s thumbnail%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New Author Info\",\n\t\t\tdescription: \"Returns a author with the specified data\",\n\t\t\tpatterns: [\n\t\t\t\t\"[an] author named %string% with [([the] url %-string%|no url)[( and [the]|, )]] [(icon %-string%|no icon)]]\",\n\t\t\t],\n\t\t\texample: \"set author of {_embed} to an author named \\\"Pikachu\\\" with the url \\\"http://vixio.space/docs\\\" and icon \\\"https://i.imgur.com/TQgR2hW.jpg\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New Field\",\n\t\t\tdescription: \"Returns a field with the specified data\",\n\t\t\tpatterns: [\n\t\t\t\t\"[(a|the)] (split|inline) field[s] [named %-string%] [with [the] value %-string%]\",\n\t\t\t\t\"[(a|the)] field[s] [named %-string%] [with [the] value %-string%]\",\n\t\t\t],\n\t\t\texample: \"set field of {_embed} to a split field named \\\"Super cool field\\\" and value \\\"Super cool value\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New Footer\",\n\t\t\tdescription: \"Returns a footer with the specified data\",\n\t\t\tpatterns: [\n\t\t\t\t\"[a] footer with [the] text %string%[( and [the]|, )(icon %-string%|no icon)]\",\n\t\t\t],\n\t\t\texample: \"set footer of {_embed} to a footer with text \\\"Hi Pika\\\" and icon \\\"https://i.imgur.com/TQgR2hW.jpg\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New Title\",\n\t\t\tdescription: \"Returns a title with the specified data\",\n\t\t\tpatterns: [\n\t\t\t\t\"[a] title [with] [the] text %string%[( and [the]|, )((url|link) %-string%|no (url|link))]\",\n\t\t\t],\n\t\t\texample: \"set title of {_embed} to a title with text \\\"Vixio\\\" and url \\\"https://i.imgur.com/TQgR2hW.jpg\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New and Previous Channel\",\n\t\t\tdescription: \"Get the new channel or previous channel for the member channel switch event.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (prev[ious]|old) [voice] channel\",\n\t\t\t\t\"[the] new [voice] channel\",\n\t\t\t],\n\t\t\texample: \"on member switch voice channel:,\\tbroadcast \\\"%event-user% left %old channel% and joined %new channel%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Color\",\n\t\t\tdescription: \"A color that can be more specific that Skript's color type.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[java[ ]]colo[u]r from rgb %number%(, | and )%number%(, | and )%number%\",\n\t\t\t],\n\t\t\texample: \"set {_color} to color from rgb 0, 0 and 0 # results in black,set {_color} to black # results in black,set {_color} to \\\"black\\\" parsed as a color  # results in black\"\n\t\t},\n\t\t{\n\t\t\tname: \"Emoji Named\",\n\t\t\tdescription: \"Get a emoji by its name, if its a custom emote you must include the guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(emoji|emote|reaction)[s] %strings% [(from|in) %-guild%]\",\n\t\t\t],\n\t\t\texample: \"on guild message receive:,\\tadd reaction \\\"smile\\\" to event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild of\",\n\t\t\tdescription: \"Get the guild of various types.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] guild[s] of %channel/voicechannel/message/emote/category/role/member%\",\n\t\t\t\t\"%channel/voicechannel/message/emote/category/role/member%'[s] guild[s]\",\n\t\t\t],\n\t\t\texample: \"set {_guild} to guild of event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"ID of\",\n\t\t\tdescription: \"Get the ID of any discord entity.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord id[s] of %channel/guild/bot/user/message/role/avatar/category/member/emote/attachment%\",\n\t\t\t\t\"%channel/guild/bot/user/message/role/avatar/category/member/emote/attachment%'[s] discord id[s]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%id of event-user%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Vixio Error\",\n\t\t\tdescription: \"Set when Vixio runs into a error, like a permission error.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] last vixio error\",\n\t\t\t],\n\t\t\texample: \"discord command $ban <member>:,\\ttrigger:,\\t\\tban arg-1 from event-guild ,\\t\\tset {_error} to the last vixio error,\\t\\tif {_error} is set:,\\t\\t\\treply with \\\"I tried to ban that user but didn't have the perms!\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mention of\",\n\t\t\tdescription: \"Get the mention tag of any discord entity that can be mentioned.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] mention tag[s] of %users/channel/members/emotes/roles/textchannel%\",\n\t\t\t\t\"%users/channel/members/emotes/roles/textchannel%'[s] mention tag[s]\",\n\t\t\t],\n\t\t\texample: \"reply with mention tag of event-user\"\n\t\t},\n\t\t{\n\t\t\tname: \"Name of\",\n\t\t\tdescription: \"Get the name of any discord entity. You can set the name of channels, guilds, bots, categories, and channel builders.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord name[s] of %channel/guild/bot/user/role/track/category/emote/field/attachment%\",\n\t\t\t\t\"%channel/guild/bot/user/role/track/category/emote/field/attachment%'[s] discord name[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%name of event-user%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New and Previous Nicknames\",\n\t\t\tdescription: \"Get the new or previous nickname from the nick change event.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] prev[ious] nick[name]\",\n\t\t\t\t\"[the] new nick[name]\",\n\t\t\t],\n\t\t\texample: \"on nickname change:,\\tbroadcast \\\"%event-member% has changed their nick from %prev nick% to %new nick%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Search Results\",\n\t\t\tdescription: \"Represents the search results from the last usage of the search effect. The search results get reset every time the search effect is used.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [last] search results\",\n\t\t\t],\n\t\t\texample: \"on join:,\\tsearch youtube for \\\"%player%\\\" and store the results in {_results::*},\\tif search results are set:,\\t\\tmessage \\\"Did you know there are %size of search results% videos about you on YouTube?\\\" to player\"\n\t\t},\n\t\t{\n\t\t\tname: \"Categories of guild\",\n\t\t\tdescription: \"Get all of the categories in a guild. You may add a category to this by name which creates a category, or delete/remove a category by inputting a category.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] categories[s] of %guilds%\",\n\t\t\t\t\"%guilds%'[s] categories[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $categories:,\\ttrigger:,\\t\\tset {_categories::*} to the categories of event-guild,\\t\\treply with \\\"Here are the current categories: `%{_categories::*}%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Category named\",\n\t\t\tdescription: \"Get a Category by its name in a Guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] category (with [the] name|named) %string% [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command $create <text>:,\\ttrigger:,\\t\\tcreate text channel:,\\t\\t\\tset the name of the channel to arg-1 ,\\t\\t\\tset the parent of the channel to category named \\\"xd\\\",\\t\\tcreate the last made channel in event-guild and store it in {_chnl},\\t\\treply with \\\"I've successfully created a channel named `%arg-1%`, ID: %id of {_chnl}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Category with ID\",\n\t\t\tdescription: \"Get a Category via it's ID.\",\n\t\t\tpatterns: [\n\t\t\t\t\"category with id %string% [in %-guild%]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%category with id \\\"\\\"4516161651\\\"\\\"%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Owner of Guild\",\n\t\t\tdescription: \"Get or set the owner of a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord owner[s] of %guilds%\",\n\t\t\t\t\"%guilds%'[s] discord owner[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $transfer <member>:,\\ttrigger:,\\t\\tset discord owner of event-guild to arg-1 with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Afk channel of Guild\",\n\t\t\tdescription: \"Get the AFK voice channel of a guild. You can set this to another channel.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] afk channel[s] of %guilds%\",\n\t\t\t\t\"%guilds%'[s] afk channel[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $afk:,\\ttrigger:,\\t\\treply with \\\"%afk channel of event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Retrieved bans\",\n\t\t\tdescription: \"Get the last set of retrieved bans from a guild. The bot must have enough permissions to retrieve the bans list.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[last] (grabbed|retrieved) bans\",\n\t\t\t],\n\t\t\texample: \"discord command $bans:,\\ttrigger:,\\t\\tgrab bans of event-guild,\\t\\treply with \\\"Here are the banned users: %grabbed bans%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Channels of\",\n\t\t\tdescription: \"Get all of the channels of a guild or category.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] channel[s] of %guild/category%\",\n\t\t\t\t\"%guild/category%'[s] channel[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $channels [<text>]:,\\ttrigger:,\\t\\tif arg-1 is not set:,\\t\\t\\treply with \\\"Here are the current channels: `%channels of event-guild%`\\\",\\t\\t\\tstop,\\t\\tset {_category} to category named arg-1,\\t\\treply with \\\"Here are the channels of the category named %arg-1%: `%channels of {_category}%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Discord Creation Date of\",\n\t\t\tdescription: \"Get the creation date of most things in Discord.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord creation date[s] of %channel/guild/message/role/category/emote/attachment%\",\n\t\t\t\t\"%channel/guild/message/role/category/emote/attachment%'[s] discord creation date[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%discord creation date of event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Emotes of guild\",\n\t\t\tdescription: \"Get all of the emotes a guild has added.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<global>] emote[s] of %guild%\",\n\t\t\t\t\"%guild%'[s] [<global>] emote[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $emotes:,\\texecutable in: guild,\\ttrigger:,\\t\\tloop emotes of event-guild:,\\t\\t\\tif loop-value is animated:,\\t\\t\\t\\tadd loop-value to {_animated::*},\\t\\t\\telse:,\\t\\t\\t\\tadd loop-value to {_non::*},\\t\\tcreate embed:,\\t\\t\\tset the author info of the embed to author named \\\"Emotes %reaction \\\"\\\":smile:\\\"\\\"%\\\" with no url and no icon,\\t\\t\\tset the description of the embed to \\\"%name of event-guild% has %size of {_non::*}% regular emotes and %size of {_animated::*}% animated emotes!!\\\",\\t\\t\\tset the colour of the embed to Purple,\\t\\t\\tadd field named \\\"Local emotes (1/1)\\\" with value \\\"%{_non::*}%\\\" to embed,\\t\\t\\tadd field named \\\"Animated emotes (1/1)\\\" with value \\\"%{_animated::*}%\\\" to embed,\\t\\tsend the last created embed to event-channel with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Icon URL of Guild\",\n\t\t\tdescription: \"Get a guild's icon url.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] icon[s] of %guilds%\",\n\t\t\t\t\"%guilds%'[s] icon[s]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%icon of event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Created Invitation\",\n\t\t\tdescription: \"Get the last invite created by vixio, can specify the specific channel if you want.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] last created invite [for %-channel%]\",\n\t\t\t],\n\t\t\texample: \"discord command invite:,\\ttrigger:,\\t\\tcreate an invite to event-channel,\\t\\treply with \\\"%the last created invite%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Members of\",\n\t\t\tdescription: \"Get all of the Member from a variety of different types.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord member[s] of %guild/category/channel%\",\n\t\t\t\t\"%guild/category/channel%'[s] discord member[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $guild:,\\ttrigger:,\\t\\treply with \\\"%size of discord members of event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Public Role of Guild\",\n\t\t\tdescription: \"Get the public role in a guild. This is the everyone role.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] public role[s] of %guild%\",\n\t\t\t\t\"%guild%'[s] public role[s]\",\n\t\t\t],\n\t\t\texample: \"discord command role:,\\ttrigger:,\\t\\treply with \\\"`%public role of event-guild%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Region of Guild\",\n\t\t\tdescription: \"Get the current region of a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] region[s] of %guilds%\",\n\t\t\t\t\"%guilds%'[s] region[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%region of event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Role Named\",\n\t\t\tdescription: \"Get a role via it's name in a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] role[<s>] (with [the] name|named) %string% [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command $role <text>:,\\ttrigger:,\\t\\tset {_role} to role named arg-1,\\t\\tif {_role} is not set:,\\t\\t\\treply with \\\"Could not find a role by that name!\\\",\\t\\t\\tstop,\\t\\treply with \\\"I found the role! ID: %id of {_role}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Roles of Guild\",\n\t\t\tdescription: \"Get all of the roles a guild has.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] role[s] of %guild%\",\n\t\t\t\t\"%guild%'[s] role[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $roles:,\\ttrigger:,\\t\\treply with \\\"Here are the current roles: `%roles of event-guild%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Text Channels of\",\n\t\t\tdescription: \"Get all of the text channels in a guild or a category.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] text(-| )channel[s] of %guild/category%\",\n\t\t\t\t\"%guild/category%'[s] text(-| )channel[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $channels [<text>]:,\\ttrigger:,\\t\\tif arg-1 is not set:,\\t\\t\\treply with \\\"Here are the current channels: `%channels of event-guild%`\\\",\\t\\t\\tstop,\\t\\tset {_category} to category named arg-1,\\t\\treply with \\\"Here are the channels of the category named %arg-1%: `%channels of {_category}%`\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Discord Verification level of Guild\",\n\t\t\tdescription: \"Get a Guild's verification level. This can be reset and set.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord verification level[s] of %guilds%\",\n\t\t\t\t\"%guilds%'[s] discord verification level[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%discord verification level of event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Voice Channels\",\n\t\t\tdescription: \"Get all of the voice channels of a guild or category.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] voice[(-| )]channels of %guild/category%\",\n\t\t\t\t\"%guild/category%'[s] voice[(-| )]channels\",\n\t\t\t],\n\t\t\texample: \"on guild message receive:,\\tset {_channels::*} to voice channels of event-guild,\\tloop {_channels::*}:,\\t\\tbroadcast \\\"%name of loop-value%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Color of Role\",\n\t\t\tdescription: \"Get the color of a role. This can be set to any color.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] colo[u]r[s] of %roles%\",\n\t\t\t\t\"%roles%'[s] colo[u]r[s]\",\n\t\t\t],\n\t\t\texample: \"set the color of {_role} to red with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild Deafened State of Member\",\n\t\t\tdescription: \"Get the deafened state of a member in a guild. If they are deafened by someone then this returns true. This will not be updated unless a user is in a voice channel when they are deafened.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<guild>] deafen[ed] state[s] of %members%\",\n\t\t\t\t\"%members%'[s] [<guild>] deafen[ed] state[s]\",\n\t\t\t],\n\t\t\texample: \"on guild message receive:,\\treply with \\\"%deafen state of event-user in event-guild%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Join Date\",\n\t\t\tdescription: \"Get the date a member joined a guild. If you append discord then it gets the date they joined discord, otherwise its the date they joined the guild if the input is a member and the discord join date for users.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<discord>] join date[s] of %members/users%\",\n\t\t\t\t\"%members/users%'[s] [<discord>] join date[s]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%discord join date of event-user%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Nickname of\",\n\t\t\tdescription: \"Gets a member's nickname (guild sensitive name). You can set this expression.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discord nickname[s] of %members%\",\n\t\t\t\t\"%members%'[s] discord nickname[s]\",\n\t\t\t],\n\t\t\texample: \"set the discord nickname of event-member to \\\"new nickname\\\" with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Online status of\",\n\t\t\tdescription: \"Get the online status of a user or a member. The online status can be set or reset for a bot.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [online][(-| )]status[s] of %members/users/bots/strings%\",\n\t\t\t\t\"%members/users/bots/strings%'[s] [online][(-| )]status[s]\",\n\t\t\t],\n\t\t\texample: \"set status of event-bot to do not disturb\"\n\t\t},\n\t\t{\n\t\t\tname: \"Roles of Member\",\n\t\t\tdescription: \"Get the roles that a member has in a guild. You can remove, add and set the roles.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] role[s] of %members%\",\n\t\t\t\t\"%members%'[s] role[s]\",\n\t\t\t],\n\t\t\texample: \"remove role with id \\\"6110981981981\\\" from roles of event-member\"\n\t\t},\n\t\t{\n\t\t\tname: \"Voice Channel of Member\",\n\t\t\tdescription: \"Get the voice channel a member is in if they are in one.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [current] voice[(-| )]channel of %members%\",\n\t\t\t\t\"%members%'[s] [current] voice[(-| )]channel\",\n\t\t\t],\n\t\t\texample: \"join voice channel of event-member\"\n\t\t},\n\t\t{\n\t\t\tname: \"Attachments of\",\n\t\t\tdescription: \"Get the attachments of a message.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] attachment[s] of %message%\",\n\t\t\t\t\"%message%'[s] attachment[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%discord name of attachment of event-message%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Attachment Height of\",\n\t\t\tdescription: \"Get the height of an attachment\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] attachment height[s] of %attachment%\",\n\t\t\t\t\"%attachment%'[s] attachment height[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%height of attachment of event-message%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Attachment Url of\",\n\t\t\tdescription: \"Get the URL of a message attachment.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] attachment url[s] of %attachment%\",\n\t\t\t\t\"%attachment%'[s] attachment url[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%attachment url of attachment of event-message%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Attachment Width of\",\n\t\t\tdescription: \"Get the width of an attachment\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] attachment width[s] of %attachment%\",\n\t\t\t\t\"%attachment%'[s] attachment width[s]\",\n\t\t\t],\n\t\t\texample: \"on guild message received:,\\tset {_} to attachment of event-message,\\tif {_} is set:,\\t\\tif {_} is an image:,\\t\\t\\treply with \\\"its %attachment width of {_}% by %attachment height of {_}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Embed of Message Builder\",\n\t\t\tdescription: \"Get the Embed of a Message Builder. You can set, delete and reset the embed.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] embed[s] of %messagebuilders%\",\n\t\t\t\t\"%messagebuilders%'[s] embed[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $build:,\\ttrigger:,\\t\\tmake embed:,\\t\\t\\tadd field with value \\\"Hey there this is an embed!\\\" to the embed,\\t\\t\\tset color of the embed to red,\\t\\tset {e} to a new message builder,\\t\\tset text of {e} to \\\"Hey there%nl%\\\",\\t\\tset embed of {e} to last embed,\\t\\tappend \\\"Info for embed attached to this builder: %color of embed of {e}%\\\" to {e},\\t\\tsend {e} to event-channel with event-bot\\t\"\n\t\t},\n\t\t{\n\t\t\tname: \"Text of a message builder\",\n\t\t\tdescription: \"Get the text inside of a message builder. Can be either set, reset, or deleted.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<stripped>] text[s] of %messagebuilders%\",\n\t\t\t\t\"%messagebuilders%'[s] [<stripped>] text[s]\",\n\t\t\t],\n\t\t\texample: \"command /build:,\\ttrigger:,\\t\\tset {e} to a new message builder,\\t\\tset text of {e} to \\\"Hey look at this\\\",\\t\\tbroadcast \\\"%text of {e}%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Message Builder\",\n\t\t\tdescription: \"Create a new MessageBuilder\",\n\t\t\tpatterns: [\n\t\t\t\t\"a [new] message builder\",\n\t\t\t],\n\t\t\texample: \"set {e} to a new message builder\"\n\t\t},\n\t\t{\n\t\t\tname: \"TTS of Message Builder\",\n\t\t\tdescription: \"Get the TTS state of a Message Builder. The state can be set to true or false.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] tts state[s] of %messagebuilders%\",\n\t\t\t\t\"%messagebuilders%'[s] tts state[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $tts:,\\ttrigger:,\\t\\tset {_} to a new message builder,\\t\\tset tts state of {_} to true,\\t\\tsend {_} to event-channel with event-bot,\\t\\treply with \\\"done?\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Reactions of Message\",\n\t\t\tdescription: \"Get the reactions of a message. Can be deleted, reset, removed and added to.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] reactions[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] reactions[s]\",\n\t\t\t],\n\t\t\texample: \"on guild message receive:,\\tadd reactions \\\"smile\\\" and \\\"frowning\\\" to reactions of event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Author of Message\",\n\t\t\tdescription: \"Get the author of a message\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [discord] author[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] [discord] author[s]\",\n\t\t\t],\n\t\t\texample: \"author of event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Content of Message\",\n\t\t\tdescription: \"Get the content of a Message. The content can be set and deleted.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [<stripped|display(able)?>] content[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] [<stripped|display(able)?>] content[s]\",\n\t\t\t],\n\t\t\texample: \"content of event-message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Jump URL of Message\",\n\t\t\tdescription: \"Get the direct jump url to a message.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] jump url[s] of %message%\",\n\t\t\t\t\"%message%'[s] jump url[s]\",\n\t\t\t],\n\t\t\texample: \"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last retrieved Message\",\n\t\t\tdescription: \"Get the last retrieved message called from the retrieve message effect. Cleared every time the retrieve message effect is used.\",\n\t\t\tpatterns: [\n\t\t\t\t\"last retrieved [discord] message\",\n\t\t\t],\n\t\t\texample: \"set {_message} to last retrieved message\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mentioned Channels\",\n\t\t\tdescription: \"Get the mentioned Channels in a Message\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] mentioned channel[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] mentioned channel[s]\",\n\t\t\t],\n\t\t\texample: \"set {_var::*} to event-message's mentioned channels\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mentioned Roles\",\n\t\t\tdescription: \"Get the mentioned Roles in a Message\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] mentioned role[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] mentioned role[s]\",\n\t\t\t],\n\t\t\texample: \"set {_var::*} to event-message's mentioned roles\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mentioned Users\",\n\t\t\tdescription: \"Get the mentioned Users in a Message\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] mentioned user[s] of %messages%\",\n\t\t\t\t\"%messages%'[s] mentioned user[s]\",\n\t\t\t],\n\t\t\texample: \"set {_var::*} to event-message's mentioned users\"\n\t\t},\n\t\t{\n\t\t\tname: \"Timestamp of\",\n\t\t\tdescription: \"Returns the timestamp of either a message or an embed. You can set the time of an embed to any date (e.g. now).\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] (timestamp|date)[s] of %embedbuilders/messages%\",\n\t\t\t\t\"%embedbuilders/messages%'[s] (timestamp|date)[s]\",\n\t\t\t],\n\t\t\texample: \"set the timestamp of {_embed} to now,,# You can also set it to a date in the past/future like this,,set {_thePast} to now,subtract 5 days from {_thePast},set the timestamp of {_embed} to {_thePast}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Channel with ID\",\n\t\t\tdescription: \"Grabs a channel by its ID\",\n\t\t\tpatterns: [\n\t\t\t\t\"channel with id %string% [in %-guild%]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%name of channel with id \\\"\\\"6515615645451561\\\"\\\"%\"\n\t\t},\n\t\t{\n\t\t\tname: \"Voice Channel with ID\",\n\t\t\tdescription: \"Get a Voice channel by it's ID, can include the Guild it is in for faster results.\",\n\t\t\tpatterns: [\n\t\t\t\t\"voice(-| )channel with id %string% [in %-guild%]\",\n\t\t\t],\n\t\t\texample: \"discord command topic <string> <string>:,\\tusage: topic <channel id> <new topic>,\\tprefixes: $,\\ttrigger:,\\t\\tset name of voice channel with id arg-1 to arg-2 with event-bot\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild  Named\",\n\t\t\tdescription: \"Get all the guilds with a certain name that vixio can find.\",\n\t\t\tpatterns: [\n\t\t\t\t\"guild[s] named %string%\",\n\t\t\t],\n\t\t\texample: \"set {_var::*} to guilds named \\\"Vixio\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild with ID\",\n\t\t\tdescription: \"Get a Guild via it's ID\",\n\t\t\tpatterns: [\n\t\t\t\t\"(server|guild) with id %string%\",\n\t\t\t],\n\t\t\texample: \"broadcast name of guild with id \\\"16165192162168461\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"User in Guild\",\n\t\t\tdescription: \"Returns the member form of a user in the specified guild\",\n\t\t\tpatterns: [\n\t\t\t\t\"%user% in %guild%\",\n\t\t\t],\n\t\t\texample: \"broadcast nickname of user with id \\\"1561515615610515\\\" in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Role with ID\",\n\t\t\tdescription: \"Get a Role via it's ID. You may get the id of a role by either making the role mentionable and typing @rolename or by looping the roles of the guild and finding it by name. You could also use the `role named` syntax to retrieve the role outright.\",\n\t\t\tpatterns: [\n\t\t\t\t\"role with id %string% [in %-guild%]\",\n\t\t\t],\n\t\t\texample: \"add role with id \\\"5151561851\\\" to roles of event-user in event-guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"User with ID\",\n\t\t\tdescription: \"Get a User via their ID.\",\n\t\t\tpatterns: [\n\t\t\t\t\"user with id %string%\",\n\t\t\t],\n\t\t\texample: \"broadcast name of user with id \\\"456145141891891\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Mentionable State of Role\",\n\t\t\tdescription: \"Tell if a role can be publicly mentioned, can be set to true or false\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] mentionable state[s] of %roles%\",\n\t\t\t\t\"%roles%'[s] mentionable state[s]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%mentionable state of role with id \\\"\\\"55416516516516\\\"\\\"%\"\n\t\t},\n\t\t{\n\t\t\tname: \"Duration of Track\",\n\t\t\tdescription: \"Get the duration of a track. This is how long it is.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] duration[s] of %tracks%\",\n\t\t\t\t\"%tracks%'[s] duration[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%duration of track event-bot is playing%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Identifier of Track\",\n\t\t\tdescription: \"Get a track's identifier, this is the unique ID given to it by the hosting site.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] identifier[s] of %tracks%\",\n\t\t\t\t\"%tracks%'[s] identifier[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%identifier of track event-bot is playing%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Last Loaded Audio Track\",\n\t\t\tdescription: \"Get the last track a bot has loaded. This does not mean the track the bot is playing.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] last loaded [audio] track [of %bot/string%] [in %guild%]\",\n\t\t\t],\n\t\t\texample: \"reply with \\\"%the last loaded track%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Position of Track\",\n\t\t\tdescription: \"Get the position a track is at. This is the current play time the track is at.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] position[s] of %tracks%\",\n\t\t\t\t\"%tracks%'[s] position[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%position of track event-bot is playing%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Author of Track\",\n\t\t\tdescription: \"Get a track's author. This is the creator of the source.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] author[s] of %tracks%\",\n\t\t\t\t\"%tracks%'[s] author[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%author of track event-bot is playing%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Url of Track\",\n\t\t\tdescription: \"Get a track's url.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] ur(i|l)[s] of %tracks%\",\n\t\t\t\t\"%tracks%'[s] ur(i|l)[s]\",\n\t\t\t],\n\t\t\texample: \"broadcast \\\"%url of track event-bot is playing%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Avatar of User\",\n\t\t\tdescription: \"Get either the user's custom avatar or their default one that discord gave them. You can extract the id from the url using the ID expression.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] [discord] [<default>] avatar[s] of %users/bots/strings/member%\",\n\t\t\t\t\"%users/bots/strings/member%'[s] [discord] [<default>] avatar[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $info <user>:,\\ttrigger:,\\t\\treply with \\\"%avatar of arg-1%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bot State Of User\",\n\t\t\tdescription: \"Check if a user is a bot or not.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] bot state[s] of %users%\",\n\t\t\t\t\"%users%'[s] bot state[s]\",\n\t\t\t],\n\t\t\texample: \"set {var} to bot state of event-user\"\n\t\t},\n\t\t{\n\t\t\tname: \"Discriminator of User\",\n\t\t\tdescription: \"Get the discriminator of a user, this is the four numbers after a users name.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] discriminator[s] of %users%\",\n\t\t\t\t\"%users%'[s] discriminator[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $info <user>:,\\ttrigger:,\\t\\treply with \\\"%discriminator of arg-1%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Game of User\",\n\t\t\tdescription: \"Get the game of a user. You may use this to set a bots game, this will set it as Playing: <whatever you input>. Use the mark as gametype effect to use the other types.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[the] game[s] of %members/users/bots/strings%\",\n\t\t\t\t\"%members/users/bots/strings%'[s] game[s]\",\n\t\t\t],\n\t\t\texample: \"discord command $info <user>:,\\ttrigger:,\\t\\treply with \\\"%game of arg-1%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"New Line\",\n\t\t\tdescription: \"Get a newline, which means skips to a new line\",\n\t\t\tpatterns: [\n\t\t\t\t\"([a] new line|nl)\",\n\t\t\t],\n\t\t\texample: \"discord command $nl:,\\ttrigger:,\\t\\tset {_m} to a message builder,\\t\\tappend \\\"Hey!\\\" to {_m},\\t\\tappend \\\"%nl%\\\" to {_m},\\t\\tappend \\\"There!\\\" to {_m},\\t\\treply with {_m}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Zero width space\",\n\t\t\tdescription: \"Get a zero width space\",\n\t\t\tpatterns: [\n\t\t\t\t\"[a] zero width space\",\n\t\t\t],\n\t\t\texample: \"append zero width space to {_messageBuilder}\"\n\t\t},\n\t],\n\tEvents: [\n\t\t{\n\t\t\tname: \"Discord Command\",\n\t\t\tdescription: \"Vixio's custom Discord command system\",\n\t\t\tpatterns: [\n\t\t\t\t\"discord command <([^\\s]+)( .+)?$>\",\n\t\t\t],\n\t\t\texample: \"discord command cmd <member>:,\\tprefixes: \\\"hey \\\", \\\"%mention tag of event-bot% \\\", ##,\\taliases: info, user,\\troles: Dev,\\tdescription: Get some information about a user,\\tusage: hey info <member>,\\tbots: {@bot},\\texecutable in: guild,\\ttrigger:,\\t\\tset {_} to a message builder,\\t\\tappend line \\\"-=Who is %name of arg-1%=-\\\",\\t\\tappend line \\\"Name: %name of arg-1%\\\",\\t\\tappend line \\\"ID: %id of arg-1%\\\",\\t\\tappend line \\\"Mention tag: %mention tag of arg-1%\\\",\\t\\tappend line \\\"Status: %online status of arg-1%\\\",\\t\\treply with {_}\"\n\t\t},\n\t\t{\n\t\t\tname: \"Track end\",\n\t\t\tdescription: \"Fired when a song a bot is playing ends.\",\n\t\t\tpatterns: [\n\t\t\t\t\"track end [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on track end seen by \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Track Seek\",\n\t\t\tdescription: \"Fired when the position of a track a bot is playing is changed. This is when it is manually changed, via set position.\",\n\t\t\tpatterns: [\n\t\t\t\t\"track seek [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on track seek seen by \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Track start\",\n\t\t\tdescription: \"Fired when a song starts. May be when a new track in the queue starts or when the first track is played.\",\n\t\t\tpatterns: [\n\t\t\t\t\"track start [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on track start seen by \\\"Jewel\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Reaction Add\",\n\t\t\tdescription: \"Fired when a reaction is added to a message\",\n\t\t\tpatterns: [\n\t\t\t\t\"reaction add[ed] [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on reaction add:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Vixio Command\",\n\t\t\tdescription: \"Used to detect when a specific vixio command is fired\",\n\t\t\tpatterns: [\n\t\t\t\t\"vixio command [%-string%]\",\n\t\t\t],\n\t\t\texample: \"on vixio command \\\"eval\\\":\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild Message Received\",\n\t\t\tdescription: \"Fired when a message is sent in a text channel that the bot can read.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(guild|server) message (receive[d] [seen]| sent) [by %-string%]\"\n\t\t\t],\n\t\t\texample: \"on guild message received seen by \\\"a bot\\\":\"\n\t\t},\n\t\t{\n\t\t\tname: \"Voice Join\",\n\t\t\tdescription: \"Fired when a user joins a voice channel\",\n\t\t\tpatterns: [\n\t\t\t\t\"user join voice [seen by %-string%]\",\n\t\t\t\t\"voice [channel] join [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on voice channel join:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Voice Leave\",\n\t\t\tdescription: \"Fired when a user leaves a voice channel\",\n\t\t\tpatterns: [\n\t\t\t\t\"user leave voice [seen by %-string%]\",\n\t\t\t\t\"voice [channel] leave [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on voice channel leave:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Private Message\",\n\t\t\tdescription: \"Fired when a private message is received or sent.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(private message|direct message) <receive(d)?( seen)?|sent> [by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on direct message received:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Reaction Remove\",\n\t\t\tdescription: \"Fired when a reaction is removed from a message\",\n\t\t\tpatterns: [\n\t\t\t\t\"reaction remove[d] [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on reaction remove:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bot Join Guild\",\n\t\t\tdescription: \"Fired when a bot joins a new guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"bot (join|enter) [new] guild [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on bot join guild\"\n\t\t},\n\t\t{\n\t\t\tname: \"Bot Leave Guild\",\n\t\t\tdescription: \"Fired when a bot leaves a guild. This could be caused by getting kicked or just naturally leaving.\",\n\t\t\tpatterns: [\n\t\t\t\t\"bot (leave|exit) guild [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on bot leave guild:\"\n\t\t},\n\t\t{\n\t\t\tname: \"User Banned\",\n\t\t\tdescription: \"Fired when a user is banned from a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"user ban[ned] [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on user banned:\"\n\t\t},\n\t\t{\n\t\t\tname: \"User Unbanned\",\n\t\t\tdescription: \"Fired when a user is unbanned from a guild.\",\n\t\t\tpatterns: [\n\t\t\t\t\"user unban[ned] [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on user unbanned:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Member Switch Voice Channel\",\n\t\t\tdescription: \"Fired when a member switches voice channels.\",\n\t\t\tpatterns: [\n\t\t\t\t\"member (switch|move) [voice] channel [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on member switch voice channel:,\\tbroadcast \\\"%event-user% left %old channel% and joined %new channel%\\\"\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild Join\",\n\t\t\tdescription: \"Fired when a user joins a guild\",\n\t\t\tpatterns: [\n\t\t\t\t\"(guild|member) join (guild|server) [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on guild join:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Guild Leave\",\n\t\t\tdescription: \"Fired when a user leaves a guild. Could be caused by kicking them or them leaving on their own free will.\",\n\t\t\tpatterns: [\n\t\t\t\t\"(guild|member) leave (guild|server) [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on member leave guild:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Nickname Change\",\n\t\t\tdescription: \"Fired when a member changes their nickname.\",\n\t\t\tpatterns: [\n\t\t\t\t\"[member] nick[name] (change|update) [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on nickname update:\"\n\t\t},\n\t\t{\n\t\t\tname: \"Message Deleted\",\n\t\t\tdescription: \"Fired when a message is deleted\",\n\t\t\tpatterns: [\n\t\t\t\t\"message delete[d] [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on message deleted\"\n\t\t},\n\t\t{\n\t\t\tname: \"Message Received\",\n\t\t\tdescription: \"Fired when a message is received anywhere, either a private message or a text channel\",\n\t\t\tpatterns: [\n\t\t\t\t\"message receive[d] [seen by %-string%]\",\n\t\t\t],\n\t\t\texample: \"on message received:\"\n\t\t},\n\t]\n}\n","<script>\n    let active = false;\n</script>\n\n<nav class=\"navbar\">\n    <div class=\"navbar-brand\">\n        <a class=\"navbar-burger\" href=\"#!\" on:click|preventDefault={() => active = !active}>\n            <span></span>\n            <span></span>\n            <span></span>\n        </a>\n    </div>\n    <div class=\"navbar-menu\" class:is-active={active}>\n        <div class=\"navbar-start\">\n\n            <a class=\"navbar-item\" href=\"/\">\n                <span><i class=\"fas fa-book\"></i></span> \n                <span>Documentation</span>\n            </a>\n\n            <div class=\"navbar-item has-dropdown is-hoverable\">\n                <a class=\"navbar-link\" href=\"#!\" on:click|preventDefault>\n                    <span><i class=\"fab fa-github\"></i></span>\n                    <span style=\"margin-left: 2%;\">GitHub</span>\n                </a>\n\n                <div class=\"navbar-dropdown\">\n                    <a class=\"navbar-item\" target=\"_blank\" href=\"https://github.com/iBlitzkriegi/Vixio/issues/new?template=bug_report.md\">Report issue</a>\n                    <a class=\"navbar-item\" target=\"_blank\" href=\"https://github.com/iBlitzkriegi/Vixio/issues/new?template=feature_request.md\">Report suggestion / idea</a>\n                    <a class=\"navbar-item\" target=\"_blank\" href=\"https://github.com/iBlitzkriegi/Vixio/releases\">Download Vixio</a>\n                </div>\n            </div>\n\n            <a class=\"navbar-item\" target=\"_blank\" href=\"https://discord.gg/kNHmqYH\"> \n                <span><i class=\"fab fa-discord\"></i></span>\n                <span style=\"margin-left: 2%;\">Discord</span>\n            </a>\n\n        </div>\n    </div>\n</nav>","<script>\n\n    export let type;\n    export let syntax;\n\n    const id = syntax.name.toLowerCase().replace(/\\s/g, '_');\n\n    async function copyLink(elementId) {\n        window.location.href = window.location.href.replace(/#\\w+$/g, '') + `#${elementId}`;\n        const dummy = document.createElement('input'),\n              text = window.location.href;\n        document.body.appendChild(dummy);\n        dummy.value = text;\n        dummy.select();\n        document.execCommand('copy');\n        document.body.removeChild(dummy);\n    }\n\n</script>\n\n<div class=\"card top\" {id}>\n    <header class=\"card-header\">\n        <span class=\"tag is-large\" style=\"background-color: rgb(97, 237, 120)\">{type.toUpperCase()}</span>\n        <p class=\"card-header-title\">{syntax.name}</p>\n        <a aria-label=\"more options\" class=\"card-header-icon\" href=\"#!\" on:click|preventDefault={() => copyLink(id)}>\n            <span>Copy Link</span>\n            <span class=\"icon\"><i class=\"fas fa-hashtag\"></i></span>\n        </a>\n    </header>\n    <div class=\"card-content\">\n        <div class=\"content\">\n\n        <label class=\"label\">Description:</label>\n        <div class=\"content\">{syntax.description}</div>\n\n        <label class=\"label\">Patterns:</label>\n        <pre class=\"card-pattern\">\n            {@html \n                syntax.patterns\n                    .join('<br>')\n                    .replace(/\\b(seen|from|of|in|reply with|append|set|add|remove)\\b/gmui, '<span style=\"color: rgb(69, 134, 239)\">$&</span>')\n\t\t\t\t\t.replace(/\\b(bot|guild|user|member|role|channel|permission|emote|embed)(builder)?s?\\b/gmui, '<span style=\"color: rgb(61, 226, 75)\">$&</span>')\n            }\n        </pre>\n\n        <label class=\"label\">Example:</label>\n        <pre class=\"card-example\">\n            {@html\n                syntax.example\n                    .split(',')\n                    .join('<br>')\n                    .split('\\\\t')\n                    .join('&nbsp;')\n                    .replace(/\\t(prefixes|aliases|roles|description|usage|bots|executable in|trigger):/gmui, '<span style=\"color: rgb(244, 182, 66)\">$&</span>')\n                    .replace(/\\s\".+\"/gmui, '<span style=\"color: rgb(194, 66, 244)\">$&</span>')\n                    .replace(/(discord )?command/gmui, '<span style=\"color: rgb(244, 182, 66)\">$&</span>')\n                    .replace(/\\{@.+\\}/gmui, '<span style=\"color: rgb(224, 38, 38)\">$&</span>')\n                    .replace(/\\b(seen|from|in|reply with|append|set|add|remove|if|is|make)(?!:)\\b/gmui, '<span style=\"color: rgb(69, 134, 239)\">$&</span>')\n            }\n        </pre>\n\n        </div>\n    </div>\n</div>","<script>\n\n    import { onMount } from 'svelte';\n\n    let visible = false;\n\n    function scrollFunction() {\n        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n            visible = true;\n        } else {\n            visible = false;\n        }\n    }\n\n    async function backTop() {\n        document.body.scrollTop = 0;\n        document.documentElement.scrollTop = 0;\n    }\n    \n    onMount(async () => {\n        window.onscroll = scrollFunction;\n    })\n\n</script>\n\n<style>\n    .topButton {\n        position: fixed;\n        bottom: 20px;\n        right: 30px;\n        z-index: 99;\n        font-size: 18px;\n        border: none;\n        background-color: #4aabd9;\n        color: white;\n        cursor: pointer;\n        padding: 12px 15px 12px 15px;\n        border-radius: 4px;\n    }\n</style>\n\n{#if visible}\n    <button class=\"topButton\" on:click={backTop}><i class=\"fas fa-chevron-up\"></i></button>\n{/if}","<script>\n\n\timport { onMount } from 'svelte';\n\timport syntaxes from './Syntaxes.js';\n\n\timport Navbar from './components/Navbar.svelte';\n\timport Sidebar from './components/Sidebar.svelte';\n\timport Card from './components/Card.svelte';\n\timport TopArrow from './components/TopArrow.svelte';\n\timport Footer from './components/Footer.svelte';\n\n\tlet effects = [];\n\tlet conditions = [];\n\tlet expressions = [];\n\tlet events = [];\n\n\tasync function search() {\n\t\tconst cards = document.getElementsByClassName('syntaxes')[0].getElementsByClassName('card')\n\t\tconst search_value = document.getElementsByClassName('search-input')[0].value.toLowerCase();\n\t\tfor (let i = 0; i < cards.length; i++) {\n\t\t\tconst title = cards[i].getElementsByClassName('card-header-title')[0].textContent;\n\t\t\tconst pattern = cards[i].getElementsByClassName('card-pattern')[0];\n\t\t\tif (title.toLowerCase().indexOf(search_value) > -1) {\n\t\t\t\tcards[i].style.display = '';\n\t\t\t} else {\n\t\t\t\tcards[i].style.display = 'none';\n\t\t\t}\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tconst match = window.location.href.match(/(\\#.+)$/gm);\n\t\tif (match) {\n\t\t\tlet element = document.getElementById( match[0].replace(/^\\#/gm, '') );\n\t\t\tawait element.scrollIntoView();\n\t\t}\n\t})\n\n</script>\n\n<Navbar />\n\n<TopArrow />\n\n<div class=\"container top\">\n\t<div class=\"columns\">\n\t\t<div class=\"column is-2 is-hidden-mobile\">\n\t\t\t<Sidebar />\n\t\t</div>\n\t\t<div class=\"column is-10\">\n\t\t\t<div class=\"has-text-centered\">\n\t\t\t\t<input class=\"input has-text-centered search-input\" on:keypress={search} type=\"text\" placeholder=\"Find a syntax\">\n\t\t\t\t<br><br>\n\t\t\t</div>\n\t\t\t<div class=\"syntaxes top\">\n\n\t\t\t\t{#each Object.keys(syntaxes) as syntaxType}\n\t\t\t\t\t<div id=\"{syntaxType.toLowerCase()}\"><a href=\"#{syntaxType.toLowerCase()}\" class=\"title\">{syntaxType}</a></div><br>\n\t\t\t\t\t{#each syntaxes[syntaxType] as syntax}\n\t\t\t\t\t\t<Card type={syntaxType} {syntax} />\n\t\t\t\t\t{/each}\n\t\t\t\t\t<br>\n\t\t\t\t{/each}\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n\n<Footer />","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","$destroy","type","index","indexOf","splice","Conditions","description","patterns","example","Effects","Expressions","Events","active","slice","toUpperCase","join","replace","split","key","important","style","setProperty","syntax","id","toLowerCase","elementId","window","location","href","dummy","body","select","execCommand","copyLink","backTop","scrollTop","documentElement","visible","scrollFunction","onscroll","syntaxes","keys","search","cards","getElementsByClassName","search_value","title","textContent","display","match","getElementById","scrollIntoView"],"mappings":"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"}